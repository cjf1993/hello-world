就是 #｛｝是会给参数带引号还会给你隐藏参数， ${} 不会给参数带引号还暴露了参数，带引号就能直接到Sql里拼接出一个查询。


在项目中查询时间段的sql语句(时间类型为datetime或date)：
<if test="pojo.begintime!=null and pojo.begintime!=''">
<![CDATA[   and DATE_FORMAT(tr.summary_date, '%Y-%m-%d')>=  DATE_FORMAT(#{pojo.begintime}, '%Y-%m-%d')   ]]>
</if>
<if test="pojo.endtime!=null and pojo.endtime!=''">
<![CDATA[  and DATE_FORMAT(tr.summary_date, '%Y-%m-%d') <= DATE_FORMAT(#{pojo.endtime}, '%Y-%m-%d')    ]]>
</if>


 在项目中查询时间段的sql语句(时间类型为varchar)：
<if test="excelImport_date_begin != null and excelImport_date_begin != '' ">
            AND
            tm.excelImport_date&gt;=#{excelImport_date_begin}
</if>
<if test="excelImport_date_end != null and excelImport_date_end != '' ">
            AND
            tm.excelImport_date    &lt;=#{excelImport_date_end}
</if>
sql分页查询：

SQL的语句LIMIT 约束SELECT 查询数据包表时，使得SQL查询语句返回指定的记录数（行数）。LIMIT 可以设置1个或2个int整型常量数字作为参数。LIMIT在数据分页查询时候十分有用，因为不是每一次查询都需要：
SELECT * FROM table
这么笨重的花费巨大性能开销查出所有数据，而是有约束的查询需要的分页数据即可。
LIMIT设置两个参数时候，前一个参数表示偏移，后一个表示最多查出的数据条数。
比如常见的：
SELECT * FROM table
使用LIMIT约束后，变成：
SELECT * FROM table LIMIT 0，-1
LIMIT后的第一个参数0限定偏移量，后面的-1表示数据库表中最后一条数据，因为SQL中id是从1开始，所以返回了全部数据行。

（一）LIMIT n即为LIMIT 0,n
举例：SELECT * FROM table LIMIT 10
查出10条数据行，由于没有设置偏移量，那么就使用默认偏移量0，这10条数据id为：1,2,3,4,5,6,7,8,9,10
可以认为LIMIT n即为LIMIT 0,n

（二）LIMIT pos,count。pos为前置开始的id偏移位置（不是开始位置），count为数据条目总数。
举例：SELECT * FROM table LIMIT 3,10
第一个参数偏移量为3，从id=4开始，查出10条数据，这10条数据id为：4,5,6,7,8,9,10,11,12,13

又如：
SELECT * FROM table LIMIT 8,3
第一个参数偏移量为8，从id=9开始，查出3条数据，这3条数据id为：9,10,11

limit 0,10=limit 0,5+limit 5,5



sql 截取字符串
MySQL：

　　1、LOCATE(substr , str )：返回子串 substr 在字符串 str 中第一次出现的位置，如果字符substr在字符串str中不存在，则返回0；

　　2、POSITION(substr  IN str )：返回子串 substr 在字符串 str 中第一次出现的位置，如果字符substr在字符串str中不存在，与LOCATE函数作用相同；

　　3、LEFT(str, length)：从左边开始截取str，length是截取的长度；

　　4、RIGHT(str, length)：从右边开始截取str，length是截取的长度；

　　5、SUBSTRING_INDEX(str  ,substr  ,n)：返回字符substr在str中第n次出现位置之前的字符串;

　　6、SUBSTRING(str  ,n ,m)：返回字符串str从第n个字符截取到第m个字符；

　　7、REPLACE(str, n, m)：将字符串str中的n字符替换成m字符；

　　8、LENGTH(str)：计算字符串str的长度；

　　MySQL函数大全：http://www.jb51.net/article/42906.htm

sqlserver：

　　1、CHARINDEX(substr ,str)：返回子串 substr 在字符串 str 中第一次出现的位置，如果字符substr在字符串str中不存在，则返回0；

　　2、LEFT(str, length)：从左边开始截取str，length是截取的长度；

　　3、RIGHT(str, length)：从右边开始截取str，length是截取的长度；

　　4、SUBSTRING(str  ,n ,m)：返回字符串str从第n个字符截取到第m个字符；

　　5、REPLACE(str, n, m)：将字符串str中的n字符替换成m字符；

　　6、LEN(str)：计算字符串str的长度；

　　sqlserver函数大全：https://wenku.baidu.com/view/e2e19dec172ded630b1cb628.html###

oracle：

　　1、SUBSTR(string,start_position,[length])    求子字符串，返回字符串；

　　　　a、substr("ABCDEFG", 0);//返回：ABCDEFG，截取所有字符；

　　　　b、substr("ABCDEFG", 2);//返回：CDEFG，截取从C开始之后所有字符；

　　　　c、substr("ABCDEFG", 0, 3);//返回：ABC，截取从A开始3个字符；

　　　　d、substr("ABCDEFG", 0, 100);//返回：ABCDEFG，100虽然超出预处理的字符串最长度，但不会影响返回结果，系统按预处理字符串最大数量返回；

　　　　e、substr("ABCDEFG", -3);//返回：EFG，注意参数-3，为负值时表示从尾部开始算起，字符串排列位置不变；

　　2、INSTR（string,subString,position,ocurrence）查找字符串位置；

　　　　　string：源字符串
        　　subString：要查找的子字符串
        　　position：查找的开始位置
        　　ocurrence：源字符串中第几次出现的子字符串

　　3、replace(strSource, str1, str2) 将strSource中的str1替换成str2；

　　4、lengthb(string)计算string所占的字节长度：返回字符串的长度，单位是字节；

　　　  length(string)计算string所占的字符长度：返回字符串的长度，单位是字符；

　　oracle函数大全：https://wenku.baidu.com/view/2fb8f865580216fc700afd9c.html
--------------------------------------------------------------------------------------------------    
  在mysql使用过程中，日期一般都是以datetime、timestamp等格式进行存储的，但有时会因为特殊的需求或历史原因，
  日期的存储格式是varchar，那么我们该如何处理这个varchar格式的日期数据呢？

使用函数：STR_TO_DATE(str, format)

STR_TO_DATE(str, format)函数是DATE_FORMAT()函数的反函数。它需要一个字符串str和一个格式字符串格式。
STR_TO_DATE()返回一个DATETIME值，如果格式字符串包含日期和时间部分，或如果字符串只包含日期或时间的部分返回日期或时间值。
-----------------------------------------------------------------------------------  
SELECT SUBSTRING_INDEX(contract_respective_period  ,'-'  ,3) FROM t_logistics_contract 
WHERE str_to_date('2019-03-1', '%Y-%m-%d') <= str_to_date(SUBSTRING_INDEX(contract_respective_period  ,'-'  ,3), '%Y-%m-%d') 
